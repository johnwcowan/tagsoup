
                          TagSoup - Keep On Truckin'

   This  is  the  home page of TagSoup, a SAX-compliant parser written in
   Java that, instead of parsing well-formed or valid XML, parses HTML as
   it  is  found  in  the wild: nasty and brutish, though quite often far
   from  short.  TagSoup  is designed for people who have to process this
   stuff  using  some  semblance  of  a  rational  application design. By
   providing  a SAX interface, it allows standard XML tools to be applied
   to even the worst HTML.

   TagSoup   is  free  and  Open  Source  software,  licensed  under  the
   [1]Academic  Free  License,  a  cleaned-up  and  patent-safe BSD-style
   license  which allows proprietary re-use. It's also licensed under the
   [2]GNU GPL, since unfortunately the GPL and the AFL are incompatible.

   Version  0.9.3 adds LexicalHandler support for comments and (implicit)
   CDATA sections. Here are the [3]release notes.

   [4]I  am  now  also  distributing  [5]TSaxon, a repackaging of Michael
   Kay's Saxon 6.5.3 XSLT parser that includes TagSoup.
     _________________________________________________________________

   TagSoup  is  designed  as  a parser, not a whole application; it isn't
   intended  to permanently clean up bad HTML, as [6]HTML Tidy does, only
   to  parse  it  on the fly. Therefore, it does not convert presentation
   HTML  to  CSS  or  anything similar. It does guarantee well-structured
   results:  tags  will  wind up properly nested, default attributes will
   appear appropriately, and so on.

   The  semantics of TagSoup are as far as practical those of actual HTML
   browsers. In particular, never, never will it throw any sort of syntax
   error: the TagSoup motto is "Just Keep On Truckin'". But there's much,
   much  more.  For  example,  if the first tag is LI, it will supply the
   application  with  enclosing  HTML, BODY, and UL tags. Why UL? Because
   that's  what  browsers  assume in this situation. For the same reason,
   overlapping tags are correctly restarted whenever possible: text like:

	This is <B>bold, <I>bold italic, </b>italic, </i>normal text

   gets correctly rewritten as:

	This is <b>bold, <i>bold italic, </i></b><i>italic, </i>normal text.

   By intention, TagSoup is small and fast. Eventually, I will spend some
   time  making  it  faster  if  it turns out to be too slow. It does not
   depend on the existence of any framework other than SAX, and should be
   able to work with any framework that can accept SAX parsers.

   You can also replace the low-level HTML scanner with one based on Sean
   McGrath's  PYX  format  (very close to James Clark's ESIS format). You
   can also supply an AutoDetector that peeks at the incoming byte stream
   and  guesses  a  character  encoding  for it. (Otherwise, the platform
   default is used. If someone supplies a good AutoDetector I may package
   it with later releases.)
     _________________________________________________________________

   It  is  possible  to  run  TagSoup  as a program using the Perl script
   tagsoup -switch ... file ... (in the bin directory), or by saying java
   -Dswitch=true  ...  -jar tagsoup-0.9.3 file .... In either case, files
   on  the  command  line  will  be  parsed individually. If no files are
   specified, the standard input is read.

   The following switches are understood:

   files
	   Output into individual files, with html extensions changed to xhtml.
	   Otherwise, all output is sent to the standard output.
   html
	   Output is in clean HTML: the XML declaration is suppressed, as are
	   end-tags for the known empty elements.
   pyx
	   Output is in PYX format.
   nons
	   Namespaces are suppressed. Normally, all elements are in the XHTML 1.x
	   namespace, and all attributes are in no namespace.
   nobogons
	   Unknown elements are suppressed. Normally, they are treated as empty.
   lexical
	   Pass through HTML comments. Has no effect when output is in PYX
	   format.
   reuse
	   Reuse a single instance of TagSoup parser throughout. Normally, a new
	   one is instantiated for each input file.
     _________________________________________________________________

   Here's the [7]presentation that I gave at the November 2002 NYC XML
   SIG meeting and XML 2002. It's in Microsoft PowerPoint format, but was
   developed under [8]OpenOffice.org 1.0, so it is readable on all
   platforms.

   There is a [11]tagsoup-friends mailing list hosted at [12]Yahoo
   Groups. You can [13]join via the Web, or by sending a blank email to
   [14]tagsoup-friends-subscribe@yahoogroups.com. The [15]archives are
   open to all.

References

   1. http://www.opensource.org/licenses/afl-2.0.php
   2. http://www.opensource.org/licenses/gpl-license.php
   3. http://groups.yahoo.com/group/tagsoup-friends/message/48
   4. http://www.ccil.org/~cowan
   5. http://mercury.ccil.org/~cowan/XML/tagsoup/tsaxon
   6. http://tidy.sf.net/
   7. http://mercury.ccil.org/~cowan/XML/tagsoup/tagsoup.ppt
   8. http://www.openoffice.org/
  11. http://groups.yahoo.com/group/tagsoup-friends
  12. http://groups.yahoo.com/
  13. http://groups.yahoo.com/group/tagsoup-friends/join
  14. mailto://tagsoup-friends-subscribe@yahoogroups.com/
  15. http://groups.yahoo.com/group/tagsoup-friends/messages
  16. http://www.topxml.com/
