#!/usr/bin/perl -w
# This file is part of TagSoup.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.  You may also distribute
# and/or modify it under version 1.2 of the Academic Free License.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
# 
# 
# Compile state table into Java code
# Format of state table: from-state character action to-state

my @fromstates = ();
my @charcodes = ();
my @actions = ();
my @tostates = ();
my %states = ();
my %actions = ();

while(<>) {
	chomp;
	my ($fromstate, $charcode, $action, $tostate) = split(/\t/);
	$fromstate = "S_" . uc($fromstate);
	$action = "A_" . uc($action);
	$action =~ s/;/_/g;
	$tostate = "S_" . uc($tostate);
	push @fromstates, $fromstate;
	push @charcodes, $charcode;
	push @actions, $action;
	push @tostates, $tostate;
	$states{$tostate} = 1;
	$actions{$action} = 1;
	}

my $states = 0;
foreach my $state (sort keys %states) {
	print "\tprivate static final int $state = ", ++$states, ";\n";
	}

my $actions = 0;
foreach my $action (sort keys %actions) {
	print "\tprivate static final int $action = ", ++$actions, ";\n";
	}

print "\tprivate static int[] statetable = {\n";
for (my $i = 0; $i < @fromstates; $i++) {
	if ($charcodes[$i] eq "EOF") {
		emit($i, "-1");
		}
	elsif ($charcodes[$i] eq "CR") {
		emit($i, "'\\r'");
		}
	elsif ($charcodes[$i] eq "LF") {
		emit($i, "'\\n'");
		}
	elsif ($charcodes[$i] eq "S") {
		emit($i, "' '");
		}
	elsif ($charcodes[$i] eq "'") {
		emit($i, "'\\''");
		}
	elsif ($charcodes[$i] eq "") {
		emit($i, "0");
		}
	else {
		emit($i, "'" . $charcodes[$i] . "'");
		}
	}

print "\t\t};\n";

print "// Actions: ";
print join(", ", sort keys %actions);
print "\n\n";

sub emit {
	my ($i, $char) = @_;
	print "\t\t$fromstates[$i], ";
	print $char, ", ";
	print "$actions[$i], ";
	print "$tostates[$i],\n";
	}
