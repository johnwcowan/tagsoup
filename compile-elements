#!/usr/bin/perl -w
# This file is part of TagSoup.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.  You may also distribute
# and/or modify it under version 1.2 of the Academic Free License.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
# 
# 
# Generate element types for HTMLSchema.i

use strict;

my (%parent, %contains, %belongs, %replace, %doc, %modnums);

sub modelize {
	my ($models) = @_;
	$models = uc($models);
	$models =~ s/[#%]//g;
	my @models = split(/\+/, $models);
	for my $model (@models) {
		$modnums{$model} = 1 unless $model eq "EMPTY";
		}
	return "M_" . join("|M_", @models);
	}

$_ = <>;
while (<>) {
	chomp;
	my ($name, $parent, $contains, $belongs, $replace, $doc) = split(/\t/);
	$parent{$name} = $parent;
	$contains{$name} = modelize($contains);
	$belongs{$name} = modelize($belongs);
	$replace{$name} = $replace;
	$doc{$name} = $doc;
	}


foreach my $name (sort(keys %parent)) {
	print "\t\telementType(\"$name\", ";
	print "$contains{$name}, $belongs{$name}, ";
	if ($replace{$name} eq "R") {
		print "F_RESTART";
		}
	elsif ($replace{$name} eq "C") {
		print "F_CDATA";
		}
	else {
		print "0";
		}
	print ");\n";
	}
print "\n";

foreach my $name (sort(keys %parent)) {
	print "\t\tparent(\"$name\", \"$parent{$name}\");\n"
		unless $parent{$name} eq "-";
	}
print "\n";
